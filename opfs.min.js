!function(r,e){"function"==typeof define&&define.amd?define(["exports"],e):"undefined"!=typeof exports?e(exports):"object"==typeof module&&module.exports?module.exports=e():e(r)}("undefined"!=typeof self?self:this,(function(r){Object.defineProperty(r,"__esModule",{value:!0}),r.OPFS=function(){var r;async function e(){try{return r||(r=await navigator.storage.getDirectory()),r}catch(r){console.error(r)}}function t(r){if(!r)return[];for(var e=r.split("/").filter((function(r){return""!==r})),t=[],a=0;a<e.length;a++){var i=e[a];"."!==i&&(".."===i?t.pop():t.push(i))}return t}async function a(a,i,n){i=i||"file",n=n||!1;try{await e();for(var o=t(a),c=r,s=0;s<o.length;s++){var l=o[s],u=s===o.length-1;try{c=u&&"file"===i?await c.getFileHandle(l,{create:n}):await c.getDirectoryHandle(l,{create:n})}catch(r){if(r instanceof DOMException&&"NotFoundError"===r.name)throw new Error("Path not found: "+a);console.error(r)}}return c}catch(r){console.error(r)}}"undefined"!=typeof navigator&&navigator.storage||console.error(new Error("OPFS() requires a Browser with File System Access API Support"));var i={readFile:async function(r){try{return function(r){return{fileHandle:r,toBlob:async function(){try{return await r.getFile()}catch(r){console.error(r)}},toText:async function(){try{var e=await r.getFile();return await e.text()}catch(r){console.error(r)}},toJSON:async function(){try{var r=await this.toText();return JSON.parse(r)}catch(r){console.error(r)}},toArrayBuffer:async function(){try{var e=await r.getFile();return await e.arrayBuffer()}catch(r){console.error(r)}},toDataURL:async function(){try{var r=await this.toBlob();return new Promise((function(e,t){var a=new FileReader;a.onload=function(){e(a.result)},a.onerror=t,a.readAsDataURL(r)}))}catch(r){console.error(r)}}}}(await a(r,"file"))}catch(r){console.error(r)}},writeFile:async function(r,e){try{var t=await a(r,"file",!0),i=await t.createWritable();if(!("string"==typeof e||e instanceof ArrayBuffer||e instanceof Blob))throw await i.close(),new Error("Unsupported data type");await i.write(e),await i.close()}catch(r){console.error(r)}},appendFile:async function(r,e){try{var t=await a(r,"file"),i=await t.getFile(),n=await t.createWritable({keepExistingData:!0});if(await n.seek(i.size),!("string"==typeof e||e instanceof ArrayBuffer||e instanceof Blob))throw await n.close(),new Error("Unsupported data type");await n.write(e),await n.close()}catch(r){console.error(r)}},deleteFile:async function(r){try{var e=t(r);if(0===e.length)throw new Error("Cannot delete root directory");var i=e.slice(0,-1).join("/"),n=e[e.length-1],o=await a(i,"directory");await o.removeEntry(n)}catch(r){console.error(r)}},renameFile:async function(r,e){try{var t=await this.readFile(r),a=await t.toArrayBuffer();await this.writeFile(e,a),await this.deleteFile(r)}catch(r){console.error(r)}},copyFile:async function(r,e){try{var t=await this.readFile(r),a=await t.toArrayBuffer();await this.writeFile(e,a)}catch(r){console.error(r)}},fileExists:async function(r){try{return await a(r,"file"),!0}catch(r){return!1}},getFileHandle:async function(r){try{return await a(r,"file")}catch(r){console.error(r)}},readDir:async function(r){try{for(var e,t=await a(r,"directory"),i=[],n=await t.entries();!(e=await n.next()).done;){var o=e.value[0],c=e.value[1];if("file"===c.kind){var s=await c.getFile();i.push({name:o,kind:"file",size:s.size,lastModified:s.lastModified,type:s.type})}else i.push({name:o,kind:"directory"})}return i}catch(r){console.error(r)}},listFiles:async function(r){try{return(await this.readDir(r)).filter((function(r){return"file"===r.kind})).map((function(r){return r.name}))}catch(r){console.error(r)}},listDirectories:async function(r){try{return(await this.readDir(r)).filter((function(r){return"directory"===r.kind})).map((function(r){return r.name}))}catch(r){console.error(r)}},readAllFiles:async function(r){try{var e=[];return await async function r(t,a){a=a||"";for(var n=await i.readDir(t),o=[],c=0;c<n.length;c++){var s=n[c],l=a?a+"/"+s.name:s.name;"file"===s.kind?e.push(i.joinPath(t,l)):o.push(r(i.joinPath(t,s.name),l))}await Promise.all(o)}(r),e}catch(r){console.error(r)}},readAllDirectories:async function(r){try{var e=[r];return await async function r(t){for(var a=await i.readDir(t),n=[],o=0;o<a.length;o++){var c=a[o];if("directory"===c.kind){var s=i.joinPath(t,c.name);e.push(s),n.push(r(s))}}await Promise.all(n)}(r),e}catch(r){console.error(r)}},createDirectory:async function(r){try{await a(r,"directory",!0)}catch(r){console.error(r)}},deleteDirectory:async function(r){try{var e=t(r);if(0===e.length)throw new Error("Cannot delete root directory");var i=e.slice(0,-1).join("/"),n=e[e.length-1],o=await a(i,"directory");await o.removeEntry(n,{recursive:!0})}catch(r){console.error(r)}},renameDirectory:async function(r,e){try{var t=[];await async function r(e,a){a=a||"";for(var n=await i.readDir(e),o=[],c=0;c<n.length;c++){var s=n[c],l=a?a+"/"+s.name:s.name;"file"===s.kind?t.push(e+"/"+l):o.push(r(e+"/"+s.name,l))}await Promise.all(o)}(r),await this.createDirectory(e);for(var a=[],n=0;n<t.length;n++){var o=t[n],c=e+"/"+o.slice(r.length+1),s=this.getParentDirectory(c);s!==e&&await this.createDirectory(s),a.push(this.copyFile(o,c))}await Promise.all(a),await this.deleteDirectory(r)}catch(r){console.error(r)}},dirExists:async function(r){try{return await a(r,"directory"),!0}catch(r){return!1}},getDirectoryHandle:async function(r,e){try{return e=e||{},await a(r,"directory",e.create)}catch(r){console.error(r)}},resolvePath:function(r){return t(r).join("/")},joinPath:function(){return Array.prototype.slice.call(arguments).map((function(r){return r.replace(/^\/|\/$/g,"")})).filter(Boolean).join("/")},splitPath:function(r){return t(r)},getParentDirectory:function(r){var e=t(r);return e.length<=1?"":e.slice(0,-1).join("/")},ensurePermission:async function(r,e){try{return e=e||"readwrite","granted"===await r.queryPermission({mode:e})||"granted"===await r.requestPermission({mode:e})}catch(r){console.error(r)}},getFileMeta:async function(r){try{var e=await a(r,"file"),t=await e.getFile();return{name:t.name,kind:"file",size:t.size,lastModified:t.lastModified,type:t.type}}catch(r){console.error(r)}},isReadable:async function(r){try{var e=await a(r,"file");return await this.ensurePermission(e,"read")}catch(r){return!1}},isWritable:async function(r){try{var e=await a(r,"file");return await this.ensurePermission(e,"readwrite")}catch(r){return!1}},streamFile:async function(r){try{var e=await a(r,"file");return(await e.getFile()).stream()}catch(r){console.error(r)}},writeStream:async function(r){try{var e=await a(r,"file",!0);return await e.createWritable()}catch(r){console.error(r)}},readFileChunk:async function(r,e,t){try{var i=await a(r,"file"),n=await i.getFile();if(e<0&&(e=0),t>n.size&&(t=n.size),e>=t)return new ArrayBuffer(0);var o=n.slice(e,t);return await o.arrayBuffer()}catch(r){console.error(r)}},importFile:async function(r,e){try{await this.writeFile(e,r)}catch(r){console.error(r)}},exportFile:async function(r){try{var e=await this.readFile(r);return await e.toBlob()}catch(r){console.error(r)}},getQuota:async function(){try{if(navigator.storage&&navigator.storage.estimate){var r=await navigator.storage.estimate();return{used:r.usage||0,available:r.quota?r.quota-(r.usage||0):0}}throw new Error("StorageManager.estimate() not available in this environment")}catch(r){console.error(r)}},clearOPFS:async function(){try{var r=await e();await async function r(e){for(var t,a=await e.entries();!(t=await a.next()).done;){var i=t.value[0],n=t.value[1];"file"===n.kind||await r(n),await e.removeEntry(i)}}(r)}catch(r){console.error(r)}},debugTree:async function(r){try{r=r||"";var e="";return await this.dirExists(r)||""===r||console.error(new Error("Directory does not exist: "+r)),await async function r(t,a){a=a||"";for(var n=await i.readDir(t),o=0;o<n.length;o++){var c=n[o],s=o===n.length-1;e+=a+(s?"└── ":"├── ")+c.name+"\n","directory"===c.kind&&await r(i.joinPath(t,c.name),a+(s?"    ":"│   "))}}(r),e}catch(r){console.error(r)}}};return i}}));